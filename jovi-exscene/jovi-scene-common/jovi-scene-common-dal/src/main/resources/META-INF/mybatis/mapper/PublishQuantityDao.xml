<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vivo.jovi.scene.common.dal.dao.IPublishQuantityDao">
  <resultMap id="BaseResultMap" type="com.vivo.jovi.scene.common.dal.entity.PublishQuantityEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="biz_id" jdbcType="VARCHAR" property="bizId" />
    <result column="biz_version" jdbcType="INTEGER" property="bizVersion" />
    <result column="biz_type" jdbcType="VARCHAR" property="bizType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="publish_quantity" jdbcType="INTEGER" property="publishQuantity" />
  </resultMap>
  <sql id="Base_Column_List">
    id, biz_id, biz_version, biz_type, create_time, update_time, publish_quantity
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_publish_quantity
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getBiz" resultType="com.vivo.jovi.scene.common.dal.entity.PublishQuantityEntity">
      SELECT
    <include refid="Base_Column_List" />
    FROM t_publish_quantity
    WHERE biz_id = #{bizId,jdbcType=VARCHAR}
    AND biz_version = #{version,jdbcType=INTEGER}
  </select>
  <select id="findAll" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_publish_quantity
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_publish_quantity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vivo.jovi.scene.common.dal.entity.PublishQuantityEntity">
    insert into t_publish_quantity (id, biz_id, biz_version, 
      biz_type, create_time, update_time, 
      publish_quantity)
    values (#{id,jdbcType=INTEGER}, #{bizId,jdbcType=VARCHAR}, #{bizVersion,jdbcType=INTEGER}, 
      #{bizType,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{publishQuantity,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.vivo.jovi.scene.common.dal.entity.PublishQuantityEntity">
    insert into t_publish_quantity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bizId != null">
        biz_id,
      </if>
      <if test="bizVersion != null">
        biz_version,
      </if>
      <if test="bizType != null">
        biz_type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="publishQuantity != null">
        publish_quantity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bizId != null">
        #{bizId,jdbcType=VARCHAR},
      </if>
      <if test="bizVersion != null">
        #{bizVersion,jdbcType=INTEGER},
      </if>
      <if test="bizType != null">
        #{bizType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishQuantity != null">
        #{publishQuantity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <insert id="batchInsert" parameterType="java.util.List">
    INSERT INTO
    t_publish_quantity
    (biz_id, biz_version, biz_type)
    VALUES
    <foreach collection="list" item="item" separator=",">
      (#{item.bizId,jdbcType=VARCHAR},#{item.bizVersion,jdbcType=INTEGER},#{item.bizType,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.vivo.jovi.scene.common.dal.entity.PublishQuantityEntity">
    update t_publish_quantity
    <set>
      <if test="bizId != null">
        biz_id = #{bizId,jdbcType=VARCHAR},
      </if>
      <if test="bizVersion != null">
        biz_version = #{bizVersion,jdbcType=INTEGER},
      </if>
      <if test="bizType != null">
        biz_type = #{bizType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="publishQuantity != null">
        publish_quantity = #{publishQuantity,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vivo.jovi.scene.common.dal.entity.PublishQuantityEntity">
    update t_publish_quantity
    set biz_id = #{bizId,jdbcType=VARCHAR},
      biz_version = #{bizVersion,jdbcType=INTEGER},
      biz_type = #{bizType,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      publish_quantity = #{publishQuantity,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="batchUpdate" parameterType="java.util.List">
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
      update t_publish_quantity
      <set>
        publish_quantity=#{item.publishQuantity, jdbcType=BIGINT}
      </set>
      where biz_id = #{item.bizId, jdbcType=VARCHAR} and biz_version = #{item.bizVersion, jdbcType=INTEGER}
    </foreach>
  </update>
</mapper>